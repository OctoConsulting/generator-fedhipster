import { Component, OnInit } from '@angular/core';
import { Router } from '@angular/router';
import { JhiLanguageService } from '<%= styleLibrary === 'bootstrap' ? 'ng-jhipster' : 'ng-fedhipster' %>';
<%_ if (enableTranslation) { _%>
import { SessionStorageService } from 'ngx-webstorage';
<%_ } _%>

import { VERSION } from 'app/app.constants';
import { <% if (enableTranslation) { %>JhiLanguageHelper, <% } %>AccountService, LoginService } from 'app/core';
import { ProfileService } from 'app/layouts/profiles/profile.service';

@Component({
    selector: '<%= jhiPrefixDashed %>-header',
    templateUrl: './header.component.html',
    styleUrls: [ 'header.scss' ]
})
export class HeaderComponent implements OnInit {
    inProduction: boolean;
    languages: any[];
    swaggerEnabled: boolean;
    version: string;
    userName: string;

    constructor(
        private loginService: LoginService,
        <%_ if (enableTranslation) { _%>
        private languageService: JhiLanguageService,
        private languageHelper: JhiLanguageHelper,
        private sessionStorage: SessionStorageService,
        <%_ } _%>
        private accountService: AccountService,
        private profileService: ProfileService,
        private router: Router,
    ) {
        this.version = VERSION ? 'v' + VERSION : '';
    }

    ngOnInit() {
        <%_ if (enableTranslation) { _%>
        this.languageHelper.getAll().then((languages) => {
            this.languages = languages;
        });

        <%_ } _%>
        this.profileService.getProfileInfo().then((profileInfo) => {
            this.inProduction = profileInfo.inProduction;
            this.swaggerEnabled = profileInfo.swaggerEnabled;
        });
    }

    <%_ if (enableTranslation) { _%>
    changeLanguage(languageKey: string) {
        this.sessionStorage.store('locale', languageKey);
        this.languageService.changeLanguage(languageKey);
    }
    <%_ } _%>

    isAuthenticated() {
        return this.accountService.isAuthenticated();
    }

    login() {
        this.loginService.login();
    }

    logout() {
        this.loginService.logout();
        this.router.navigate(['']);
    }
}
